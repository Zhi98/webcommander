<?xml version="1.0"?>
<!--
Copyright (c) 2012-2014 VMware, Inc.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->
<!-- Author: Jerry Liu, liuj@vmware.com -->

<!DOCTYPE webcommander[
<!ENTITY commonViServerParam '
<parameter mandatory="1" name="serverAddress" helpmessage="IP or FQDN of the ESX or VC server where the target VM is located" />
<parameter mandatory="0" name="serverUser" helpmessage="User name to connect to the server (default is root)" type="selectText">
	<options>
		<option value="root">root</option>
		<option value="administrator">administrator</option>
	</options>
</parameter>
<parameter mandatory="0" name="serverPassword" helpmessage="Password of the user (default is VMware standard)" type="password" />
'>
<!ENTITY vmParam '
<parameter mandatory="1" name="vmName" helpmessage="Name of the target VM" />
<parameter mandatory="0" name="guestUser" helpmessage="User of guest OS (default is administrator)" />
<parameter mandatory="0" name="guestPassword" helpmessage="Password of guest OS (default is VMware standard)" type="password" /> 
'>
<!ENTITY commonVcParam '
<parameter mandatory="1" name="vcAddress" helpmessage="IP or FQDN of the VC server" />
<parameter mandatory="0" name="vcUser" helpmessage="User name to connect to VC server (default is administrator)" />
<parameter mandatory="0" name="vcPassword" helpmessage="Password of the user (default is VMware standard)" type="password" /> 
'>
<!ENTITY commonDomainParam '
<parameter mandatory="1" name="domainName" helpmessage="Name of the domain" />
<parameter mandatory="0" name="domainUser" helpmessage="User name to connect to domain (default is administrator)" />
<parameter mandatory="0" name="domainPassword" helpmessage="Password of the user (default is VMware standard)" type="password" /> 
'>
<!ENTITY falseOrTrue '
<options>
	<option value="false">false</option>
	<option value="true">true</option>
</options> 
'>
<!ENTITY commonBuildParam '
<parameter mandatory="0" name="product" helpmessage="Name of the product of the build" />
<parameter mandatory="0" name="branch" helpmessage="Name of the branch of the build " />
<parameter mandatory="1" name="build" helpmessage="Number of the build to install" type="selectText">
	<options/>
</parameter>
'>
<!ENTITY rdsSessionCounter '
<parameter mandatory="1" name="counter" helpmessage="What to count" type="option">
	<options>
		<option value="getAllLocalSessionCount">AllLocalSessionCount</option>  
		<option value="getAllAppSessionCount">AllAppSessionCount</option>
		<option value="getAllLocalDesktopSessionCount">AllLocalDesktopSessionCount</option>
		<option value="getAllConnectedAppSessionCount">AllConnectedAppSessionCount</option>
		<option value="getAllConnectedLocalDesktopSessionCount">AllConnectedLocalDesktopSessionCount</option>
		<option value="getAllDisconnectedAppSessionCount">AllDisconnectedAppSessionCount</option>
		<option value="getAllDisconnectedLocalDesktopSessionCount">AllDisconnectedLocalDesktopSessionCount</option>
	</options>
</parameter>
'>
]>
<webcommander xmlns:xi="http://www.w3.org/2003/XInclude">
	<command name="adNewDomain" synopsis="Create a child domain" developer="liuj">
		<description>This command creates a child domain in AD.
		This command generates _def.xml.
		It parses all powershell scripts to get information from comment
		based help and parameter attributes.</description>
		<script>ad\adNewDomain</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="domainName" helpmessage="Name of the new domain" />
			<parameter mandatory="1" name="domainMode" helpmessage="Domain mode" type="option">
				<options>
					<option value="Win2003">Win2003</option>
					<option value="Win2008">Win2008</option>
					<option value="Win2008R2">Win2008R2</option>
					<option value="Win2012">Win2012</option>
				</options>
			</parameter>
			<parameter mandatory="0" name="safeModePassword" helpmessage="Safe mode administrator password (default is VMware standard)" type="password" />
			<parameter mandatory="1" name="parentDomainName" helpmessage="Name of the parent domain" />
			<parameter mandatory="0" name="parentDomainUser" helpmessage="User of the parent domain (default is administrator)" />
			<parameter mandatory="0" name="parentDomainPassword" helpmessage="Password of the parent domain (default is VMware standard)" type="password" />
			<parameter mandatory="1" name="parentDomainControllerAddress" helpmessage="FQDN of the parent domain controller" />
		</parameters>
		<functionalities>
			<functionality>AD</functionality>
		</functionalities>
	</command>
	<command name="adNewForest" synopsis="Create a forest" developer="liuj">
		<script>ad\adNewForest</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="domainName" helpmessage="Name of the new domain" />
			<parameter mandatory="1" name="netbiosName" helpmessage="Netbios name of the new domain" />
			<parameter mandatory="1" name="forestMode" helpmessage="Forest mode" type="option">
				<options>
					<option value="Win2003">Win2003</option>
					<option value="Win2008">Win2008</option>
					<option value="Win2008R2">Win2008R2</option>
					<option value="Win2012">Win2012</option>
				</options>
			</parameter>
			<parameter mandatory="0" name="safeModePassword" helpmessage="Safe mode administrator password (default is VMware standard)" type="password" />
		</parameters>
		<functionalities>
			<functionality>AD</functionality>
		</functionalities>
	</command>
	<command name="adNewUserAndGroup" synopsis="Create new users and groups" developer="liuj">
		<script>ad\adNewUserAndGroup</script>
		<description>
			<p>Users will be averagely added into each group.</p>
			<p>For instance, when there are 100 users and 10 groups:</p>
			<p>user-1 to user-10 will be in group-1, user-11 to user-20 will be in group-2, etc.</p>
		</description>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="userPrefix" helpmessage="Prefix of user name" />
			<parameter mandatory="0" name="totalUser" helpmessage="Number of users to create, default is '1'" />
			<parameter mandatory="0" name="userPassword" helpmessage="User password (default is VMware standard)" type="password" />
			<parameter mandatory="1" name="groupPrefix" helpmessage="Prefix of group name" />
			<parameter mandatory="0" name="totalGroup" helpmessage="Number of groups to create, default is '1'" />
		</parameters>
		<functionalities>
			<functionality>AD</functionality>
		</functionalities>
	</command>
	<command name="adJoinDomain" synopsis="Join domain" developer="liuj">
		<script>ad\adJoinDomain</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			&commonDomainParam;
			<parameter mandatory="1" name="dnsIp" helpmessage="IP address of DNS server" />
		</parameters>
		<functionalities>
			<functionality>AD</functionality>
		</functionalities>
	</command>
	<command name="brokerAddComposer" synopsis="Add composer" developer="liuj">
		<script>broker\brokerAddComposer</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			&commonVcParam;
			<parameter mandatory="1" name="composerAddress" helpmessage="IP or FQDN of the composer server" />
			<parameter mandatory="0" name="composerUser" helpmessage="User name to connect to composer server (default is local\administrator)" />
			<parameter mandatory="0" name="composerPassword" helpmessage="Password of the user (default is VMware standard)" type="password" />
			<parameter mandatory="0" name="port" helpmessage="Composer port number, default is 18443" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerAddComposerDomain" synopsis="Add composer domain" developer="liuj">
		<script>broker\brokerAddComposerDomain</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			&commonVcParam;
			<parameter mandatory="1" name="domainName" helpmessage="Domain name" />
			<parameter mandatory="0" name="domainUser" helpmessage="Domain user name (default is administrator)" />
			<parameter mandatory="0" name="domainPassword" helpmessage="Password of the user (default is VMware standard)" type="password" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerAddLicense" synopsis="Add license" developer="liuj">
		<script>broker\brokerAddLicense</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="license" helpmessage="License key" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerAddLinkedClonePool" synopsis="Add linked clone pool" developer="liuj">
		<script>broker\brokerAddLinkedClonePool</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="vcAddress" helpmessage="VC address showed in admin UI" />
			<parameter mandatory="1" name="composerDomainName" helpmessage="Composer domain name" />
			<parameter mandatory="1" name="poolId" helpmessage="Unique name used to identify this pool" />
			<parameter mandatory="0" name="namePrefix" helpmessage="Name prefix, default is 'poolID-'" />
			<parameter mandatory="1" name="parentVmPath" helpmessage="Path to a virtual machine to be used as the parent VM for this desktop pool." />
			<parameter mandatory="1" name="parentSnapshotPath" helpmessage="Path to the snapshot that is to be used as the image for this pool, i.e. /clean or /clean/test0" />
			<parameter mandatory="1" name="vmFolderPath" helpmessage="Specify a location for this new directory as a vCenter folder path." />
			<parameter mandatory="1" name="resourcePoolPath" helpmessage="Path to a resource pool to be used for this desktop pool." />
			<parameter mandatory="1" name="datastoreSpecs" helpmessage="List of datastore specs for storage of desktop VMs and data disks, separated by semicolons using the format: '[Overcommit,usage]/path/to/datastore'" />
			<parameter mandatory="0" name="dataDiskLetter" helpmessage="Data disk letter, default is 'U'" />
			<parameter mandatory="0" name="dataDiskSize" helpmessage="Data disk size, default is 2048" />
			<parameter mandatory="0" name="tempDiskSize" helpmessage="Temp disk size, default is 1024" />
			<parameter mandatory="1" name="min" helpmessage="Minimum number of desktops to be provisioned in this pool" />
			<parameter mandatory="1" name="max" helpmessage="Maximum number of desktops to be provisioned in this pool" />
			<parameter mandatory="0" name="poolType" helpmessage="User assignment mode" type="option">
				<options>
					<option value="Persistent">Persistent</option>
					<option value="NonPersistent">NonPersistent</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerAddManualPool" synopsis="Add manual pool" developer="liuj">
		<script>broker\brokerAddManualPool</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="poolId" helpmessage="Unique name used to identify this pool" />
			&commonVcParam;
			<parameter mandatory="1" name="agentVmName" helpmessage="Agent virtual machine name in the vCenter inventory" />
			<parameter mandatory="1" name="poolType" helpmessage="User assignment mode" type="option">
				<options>
					<option value="Persistent">Persistent</option>
					<option value="NonPersistent">NonPersistent</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerAddSviPool" synopsis="Add SVI pool" developer="liuj">
		<script>broker\brokerAddSviPool</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="poolId" helpmessage="Unique name used to identify this pool" />
			&commonVcParam;
			<parameter mandatory="1" name="parentVmName" helpmessage="Parent virtual machine name in the vCenter inventory" />
			<parameter mandatory="1" name="snapshotPath" helpmessage="Path to the snapshot that is to be used as the image for this pool, i.e. /clean or /clean/test0" />
			<parameter mandatory="1" name="min" helpmessage="Minimum number of desktops to be provisioned in this pool" />
			<parameter mandatory="1" name="max" helpmessage="Maximum number of desktops to be provisioned in this pool" />
			<parameter mandatory="1" name="poolType" helpmessage="User assignment mode" type="option">
				<options>
					<option value="Persistent">Persistent</option>
					<option value="NonPersistent">NonPersistent</option>
				</options>
			</parameter>
			<parameter mandatory="0" name="vmEsxHost" helpmessage="The host or cluster on which to run the VMs created for this pool (default is the same one where the parent VM is located)" />
			<parameter mandatory="1" name="datastore" helpmessage="The storage of desktop VMs and data disks" type="selectText">
				<options />
			</parameter>
			<parameter mandatory="0" name="folder" helpmessage="A new folder will be created to store the pool VMs. Specify a location for this folder as a vCenter folder path" />
			<parameter mandatory="0" name="resourcePool" helpmessage="Path to a resource pool to be used for this desktop pool" />
			<parameter mandatory="1" name="datacenter" helpmessage="Name of the datacenter where this desktop pool locates" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerAddTransferServer" synopsis="Add transfer server" developer="liuj">
		<script>broker\brokerAddTransferServer</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			&commonVcParam;
			<parameter mandatory="1" name="tsVmName" helpmessage="Transfer server virtual machine name in the vCenter inventory" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerAddVc" synopsis="Add VC" developer="liuj">
		<script>broker\brokerAddVc</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			&commonVcParam;
			<parameter mandatory="1" name="useComposer" helpmessage="If use composer, true or false" type="option">
				&falseOrTrue;
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerEntitlePool" synopsis="Entitle pool" developer="liuj">
		<script>broker\brokerEntitlePool</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="poolId" helpmessage="Pool ID" />
			<parameter mandatory="1" name="userName" helpmessage="Specifies user name (in domain\user format)" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerGetDesktopState" synopsis="Get desktop state" developer="liuj">
		<script>broker\brokerGetDesktopState</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="poolId" helpmessage="Pool ID, default is '*' for all pools" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerSettingsAction" synopsis="Import / Export Broker Settings" developer="liuj">
		<script>broker\brokerSettings</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="filePath" helpmessage="Path to the broker settings file, default is c:\temp\broker.ldif" />
			<parameter mandatory="1" name="action" helpmessage="Action on broker Settings" type="option">
				<options>
					<option value="export">export</option>
					<option value="import">import</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerRebalanceLinkedClonePool" synopsis="Rebalance linked clone pool" developer="liuj">
		<script>broker\brokerRebalanceLinkedClonePool</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="poolId" helpmessage="Unique name used to identify this pool" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerRecomposeLinkedClonePool" synopsis="Recompose linked clone pool" developer="liuj">
		<script>broker\brokerRecomposeLinkedClonePool</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="poolId" helpmessage="Unique name used to identify this pool" />
			<parameter mandatory="1" name="parentVmPath" helpmessage="Path to a virtual machine to be used as the parent VM for this desktop pool." />
			<parameter mandatory="1" name="parentSnapshotPath" helpmessage="Path to the snapshot that is to be used as the image for this pool, i.e. /clean or /clean/test0" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerRefreshLinkedClonePool" synopsis="Refresh linked clone pool" developer="liuj">
		<script>broker\brokerRefreshLinkedClonePool</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="poolId" helpmessage="Unique name used to identify this pool" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerRemovePool" synopsis="Remove pool" developer="liuj">
		<script>broker\brokerRemovePool</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="poolId" helpmessage="Pool ID" />
			<parameter mandatory="1" name="rmFromDisk" helpmessage="If remove VM from disk, true or false" type="option">
				&falseOrTrue;
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerRemoveTransferServer" synopsis="Remove transfer server" developer="liuj">
		<script>broker\brokerRemoveTransferServer</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="tsVmName" helpmessage="Transfer server virtual machine name in the vCenter inventory. Input '*' to remove all" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerSendSessionLogoff" synopsis="Send session logoff to pool" developer="liuj">
		<script>broker\brokerSendSessionLogoff</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="poolId" helpmessage="Unique name used to identify this pool" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerSetRecoveryDisabled" synopsis="Set Auto-Recovery" developer="liuj">
		<script>broker\brokerSetPoolAutoRecovery</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="poolId" helpmessage="Pool ID" />
			<parameter mandatory="1" name="action" helpmessage="Action on the auto-recovery setting, disable or enable" type="option">
				<options>
					<option value="disable">Disable</option>
					<option value="enable">Enable</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerSetDirectConnect" synopsis="Set direct connect" developer="liuj">
		<script>broker\brokerSetDirectConnect</script>
		<description>
			<p>This command is to configure HTTP(S) Secure Tunnel on Broker. The PowerCLI cmdlet used by this command is</p>
			<p>update-connectionbroker -directconnect [$false | $true]</p>
			<p>When set to False, "Use Secure Tunnel connection to desktop" is checked in the dialog below.</p>
			<p>
				<img id="widthSetter" src="images/brokerEdit.png" />
			</p>
		</description>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="switch" helpmessage="Switch, true or false" type="option">
				&falseOrTrue;
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerSetDirectPCoIP" synopsis="Set direct PCoIP" developer="liuj">
		<script>broker\brokerSetDirectPCoIP</script>
		<description>
			<p>This command is to configure PCoIP secure gateway. The PowerCLI cmdlet used by this command is</p>
			<p>update-connectionbroker -directPCoIP [$false | $true]</p>
			<p>When set to False, "Use PCoIP Secure Gateway for PCoIP connections to desktop" is checked in the dialog below.</p>
			<p>
				<img id="widthSetter" src="images/brokerEdit.png" />
			</p>
		</description>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="switch" helpmessage="Switch, true or false" type="option">
				&falseOrTrue;
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerSetEventDatabase" synopsis="Set event database" developer="liuj">
		<script>broker\brokerSetEventDatabase</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="dbAddress" helpmessage="Database server address" />
			<parameter mandatory="0" name="dbType" helpmessage="Database server type, default is SQLSERVER" type="option">
				<options>
					<option value="SQLSERVER">SQLSERVER</option>
					<option value="ORACLE">ORACLE</option>
				</options>
			</parameter>
			<parameter mandatory="0" name="dbPort" helpmessage="Port, default is 1433" />
			<parameter mandatory="1" name="dbName" helpmessage="Database name" />
			<parameter mandatory="0" name="dbUser" helpmessage="User name, default is administrator" />
			<parameter mandatory="0" name="dbPassword" helpmessage="Password, default is VMware standard" type="password" />
			<parameter mandatory="1" name="tablePrefix" helpmessage="Table prefix" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerSetHtmlAccess" synopsis="Set HTML Access for Pool" developer="liuj">
		<script>broker\brokerSetHtmlAccess</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="poolId" helpmessage="Pool ID" />
			<parameter mandatory="1" name="switch" helpmessage="Switch, true or false" type="option">
				&falseOrTrue;
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerSetFarmHtmlAccess" synopsis="Set HTML Access for Farm" developer="liuj">
		<script>broker\brokerSetFarmHtmlAccess</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="farmId" helpmessage="Farm ID" />
			<parameter mandatory="1" name="switch" helpmessage="Switch, true or false" type="option">
				&falseOrTrue;
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
		</functionalities>
	</command>
	<command name="brokerSetPairingPassword" synopsis="Set pairing password" developer="liuj">
		<script>broker\brokerSetPairingPassword</script>
		<description>
			<p>This command is to specify Security Server Pairing Password in the dialog below. This must run before installing Security Server.</p>
			<p>The password is hardcoded to 111111, and timeout is 24 hours.</p>
			<p>
				<img id="widthSetter" src="images/pairingPassword.png" />
			</p>
		</description>
		<parameters>
			&commonViServerParam;
			&vmParam;
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerSetPoolName" synopsis="Set pool display name" developer="liuj">
		<script>broker\brokerSetPoolName</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="poolId" helpmessage="Specifies pool ID" />
			<parameter mandatory="1" name="poolName" helpmessage="Specifies the pool display name" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerSetPoolId" synopsis="Set pool ID" developer="liuj">
		<script>broker\brokerSetPoolId</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="poolId" helpmessage="Specifies pool ID" />
			<parameter mandatory="1" name="newId" helpmessage="Specifies the new ID" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerSetupSmartcard" synopsis="Setup smartcard" developer="liuj">
		<script>broker\brokerSetupSmartcard</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="cert" helpmessage="CA certificate" type="file" />
		</parameters>
		<functionalities>
			<functionality>Broker</functionality>
		</functionalities>
	</command>
	<command name="brokerAddApplication" synopsis="Add application" developer="liuj">
		<script>brokerrds\brokerAddApplication</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="farmName" helpmessage="Specifies Farm name" />
			<parameter mandatory="1" name="applicationName" helpmessage="Specifies application name" />
			<parameter mandatory="0" name="applicationId" helpmessage="Specifies application ID" />
			<parameter mandatory="0" name="displayName" helpmessage="Specifies application display name" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
		</functionalities>
	</command>
	<command name="brokerAddRdsAppPool" synopsis="Add application pool" developer="liuj">
		<script>brokerrds\brokerAddRdsAppPool</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="farmId" helpmessage="Specifies Farm ID" />
			<parameter mandatory="1" name="poolId" helpmessage="Specifies application pool ID" />
			<parameter mandatory="1" name="execPath" helpmessage="Specifies application executable path" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
		</functionalities>
	</command>
	<command name="brokerAddRdsDesktopPool" synopsis="Add desktop pool" developer="liuj">
		<script>brokerrds\brokerAddRdsDesktopPool</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="farmId" helpmessage="Specifies farm ID" />
			<parameter mandatory="1" name="poolId" helpmessage="Specifies desktop pool ID" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
		</functionalities>
	</command>
	<command name="brokerAddFarm" synopsis="Add farm" developer="liuj">
		<script>brokerrds\brokerAddFarm</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="farmName" helpmessage="Specifies Farm name" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
		</functionalities>
	</command>
	<command name="brokerAddFarmWithRdsServer" synopsis="Add farm with RDS server" developer="liuj">
		<script>brokerrds\brokerAddFarmWithRdsServer</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="farmName" helpmessage="Specifies Farm name" />
			<parameter mandatory="1" name="rdsServerDnsName" helpmessage="Specifies RDS server DNS name" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
		</functionalities>
	</command>
	<command name="brokerAddRdsServerToFarm" synopsis="Add RDS server to farm" developer="liuj">
		<script>brokerrds\brokerAddRdsServerToFarm</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="farmName" helpmessage="Specifies Farm name" />
			<parameter mandatory="1" name="rdsServerDnsName" helpmessage="Specifies RDS server DNS name" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
		</functionalities>
	</command>
	<command name="brokerDeleteApplication" synopsis="Delete application" developer="liuj">
		<script>brokerrds\brokerDeleteApplication</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="applicationId" helpmessage="Specifies application ID" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
		</functionalities>
	</command>
	<command name="brokerDeleteDesktop" synopsis="Delete desktop" developer="liuj">
		<script>brokerrds\brokerDeleteDesktop</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="desktopId" helpmessage="Specifies desktop ID" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
		</functionalities>
	</command>
	<command name="brokerDeleteFarm" synopsis="Delete farm" developer="liuj">
		<script>brokerrds\brokerDeleteFarm</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="farmName" helpmessage="Specifies Farm name" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
		</functionalities>
	</command>
	<command name="brokerEntitleApplication" synopsis="Entitle application" developer="liuj">
		<script>brokerrds\brokerEntitleApplication</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="applicationId" helpmessage="Specifies application ID" />
			<parameter mandatory="1" name="userName" helpmessage="Specifies user name (in domain\user format)" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
		</functionalities>
	</command>
	<command name="brokerRemoveRdsServerFromFarm" synopsis="Remove RDS server from farm" developer="liuj">
		<script>brokerrds\brokerRemoveRdsServerFromFarm</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="farmName" helpmessage="Specifies Farm name" />
			<parameter mandatory="1" name="rdsServerDnsName" helpmessage="Specifies RDS server DNS name" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
		</functionalities>
	</command>
	<command name="listBuild" synopsis="Search builds with product and branch" developer="liuj">
		<script>misc\listBuild</script>
		<parameters>
			<parameter mandatory="1" name="product" helpmessage="Name of the product of the build" />
			<parameter mandatory="1" name="branch" helpmessage="Name of the branch of the build " />
			<parameter mandatory="0" name="releaseType" helpmessage="Release type" type="selectText">
				<options>
					<option value="beta">beta</option>
					<option value="GA">GA</option>
				</options>
			</parameter>
			<parameter mandatory="0" name="buildType" helpmessage="Build type" type="selectText">
				<options>
					<option value="beta">beta</option>
					<option value="release">release</option>
				</options>
			</parameter>
			<parameter mandatory="0" name="qaResult" helpmessage="Filter build by QA Result " />
			<parameter mandatory="0" name="latest" helpmessage="Number of latest builds to list " />
		</parameters>
		<functionalities>
			<functionality>Build</functionality>
		</functionalities>
	</command>
	<command name="sendEmail" synopsis="Send email notification" developer="liuj">
		<script>misc\sendEmail</script>
		<parameters>
			<parameter mandatory="0" name="fromAddress" helpmessage="From address, default is doNotReply@vmware.com" />
			<parameter mandatory="1" name="toAddress" helpmessage="To address" />
			<parameter mandatory="0" name="ccAddress" helpmessage="CC address" />
			<parameter mandatory="0" name="bccAddress" helpmessage="BCC address" />
			<parameter mandatory="0" name="subject" helpmessage="Subject, default is 'webCommander notification'" />
			<parameter mandatory="1" name="body" helpmessage="Email body" type="textarea" />
		</parameters>
		<functionalities>
			<functionality>Email</functionality>
		</functionalities>
	</command>
	<command name="installComposerSync" synopsis="Composer" developer="liuj">
		<script>install\vmware\installComposer</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="ssName" helpmessage="Name of the snapshot which to restore before installing Composer" />
			<parameter mandatory="1" name="build" helpmessage="Number of the build to install" />
			<parameter mandatory="1" name="dsnName" helpmessage="Name of DSN to connect to VC database" />
			<parameter mandatory="0" name="dbUser" helpmessage="Name of the database user, default is 'sa'" />
			<parameter mandatory="0" name="dbPassword" helpmessage="Password of the database user, default is VMware standard" />
			<parameter mandatory="0" name="downloadOnly" helpmessage="Download build without installing it" type="option">
				&falseOrTrue;
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Install</functionality>
		</functionalities>
	</command>
	<command name="installDotNet" synopsis="DotNet 4.5.2" developer="liuj">
		<script>install\installDotNet</script>
		<description>
			<p>
				<b>Supported Operating System</b>
			</p>
			<p>Windows 7 Service Pack 1, Windows 8, Windows 8.1, Windows Server 2008 R2 SP1, Windows Server 2008 Service Pack 2, Windows Server 2012, Windows Server 2012 R2, Windows Vista Service Pack 2</p>
		</description>
		<parameters>
			&commonViServerParam;
			&vmParam;
		</parameters>
		<functionalities>
			<functionality>Install</functionality>
		</functionalities>
	</command>
	<command name="installSilently" synopsis="Install silently" developer="liuj">
		<script>install\installSilently</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="ssName" helpmessage="Name of the snapshot which to restore before installing View" />
			<parameter mandatory="1" name="installerUrl" helpmessage="URL to the installer binary" type="textarea" />
			<parameter mandatory="0" name="silentInstallParam" helpmessage="Silent install parameters, such as ' /s /v /qn'" />
			<parameter mandatory="0" name="downloadOnly" helpmessage="Download build without installing it" type="option">
				&falseOrTrue;
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Install</functionality>
		</functionalities>
	</command>
	<command name="installCis" synopsis="VC 2015" developer="liuj">
		<script>install\vmware\installCis</script>
		<description>
			<p>The user defined as "guestUser" must have already logged on the target machine, when the install starts. Otherwise the install will fail. 
				<br />Service <a href="webCmd.php?command=vmSetAutoAdminLogon" target="_blank">vmSetAutoAdminLogon</a> could be used to meet this requirement.
				<br />Default VC user is 'administrator@vsphere.local'.
				<br />Default VC password is 'passw0rd'.
				<br />Refer to this <a href="https://wiki.eng.vmware.com/PIT/Projects/2015/vc_silent_install" target="_blank">wiki</a> for a template setting in JSON </p>
		</description>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="ssName" helpmessage="Name of the snapshot which to restore before installing Virtual Center" />
			&commonBuildParam;
			<parameter mandatory="0" name="customSettings" helpmessage="Custom settings in JSON format" type="textarea" />
			<parameter mandatory="0" name="downloadOnly" helpmessage="Download build without installing it" type="option">
				&falseOrTrue;
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Install</functionality>
		</functionalities>
	</command>
	<command name="installVc" synopsis="VC 5.5 and earlier versions" developer="liuj">
		<script>install\vmware\installVc</script>
		<description>
			<p>The user defined as "guestUser" must have already logged on the target machine, when the install starts. Otherwise the install will fail. 
				<br />Service <a href="webCmd.php?command=vmSetAutoAdminLogon" target="_blank">vmSetAutoAdminLogon</a> could be used to meet this requirement.
				<br />Default VC user is 'administrator@vsphere.local'.
				<br />Default VC password is 'Admin@12345'.</p>
		</description>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="ssName" helpmessage="Name of the snapshot which to restore before installing Virtual Center" />
			&commonBuildParam;
			<parameter mandatory="0" name="downloadOnly" helpmessage="Download build without installing it" type="option">
				&falseOrTrue;
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Install</functionality>
		</functionalities>
	</command>
	<command name="installViewSync" synopsis="View" developer="liuj">
		<script>install\vmware\installView</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="ssName" helpmessage="Name of the snapshot which to restore before installing View" />
			<parameter mandatory="1" name="type" helpmessage="Type of the View component to install" type="option">
				<options>
					<option value="blast">blast (Blast)</option>
					<option value="agent">agent (View Agent)</option>
					<option value="agent-direct">agent-direct (View Agent Direct Connection)</option>
					<option value="agent-ts">agent-ts (View Agent for Terminal Server)</option>
					<option value="agent-composer">agent-composer (View Composer Agent)</option>
					<option value="feature-pack">feature-pack (View Agent Feature Pack)</option>
					<option value="client">client (View Client for Windows)</option>
					<option value="client-cdk">client-cdk (WinCDK View Client)</option>
					<option value="client-local">client-local (View Client with Local Mode for Windows)</option>
					<option value="client-lx">client-lx (View Client for Linux)</option>
					<option value="client-osx">client-osx (View Client for OSX)</option>
					<option value="broker">broker (Standard View Connection Server)</option>
					<option value="broker-replica">broker-replica (Replica View Connection Server)</option>
					<option value="broker-security">broker-security (Security View Connection Server)</option>
					<option value="broker-transfer">broker-transfer (Transfer View Connection Server)</option>
				</options>
			</parameter>
			&commonBuildParam;
			<parameter mandatory="0" name="stdBrokerIp" helpmessage="IP address of standard broker (necessary for installing replica or security broker, and unmanaged agent)" />
			<parameter mandatory="0" name="downloadOnly" helpmessage="Download build without installing it" type="option">
				&falseOrTrue;
			</parameter>
			<parameter mandatory="0" name="silentInstallParam" helpmessage="Silent install parameters" type="textarea" />
			<!--parameter mandatory="0" name="uvsId" helpmessage="This parameter is used by UVS only. It's not editable to end user." type="uvsid" /-->
		</parameters>
		<functionalities>
			<functionality>Install</functionality>
		</functionalities>
	</command>
	<command name="installWebCommander" synopsis="WebCommander" developer="liuj">
		<script>install\installWebCommander</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="packageUrl" helpmessage="URL of WebCommander package, default is from Fling web site." type="textarea" />
			<parameter mandatory="0" name="authentication" helpmessage="Type of authentication, default is 'windows'" />
			<parameter mandatory="0" name="defaultPassword" helpmessage="Default password used by the server to communicate with vSphere and VM, default is VMware standard." type="password" />
		</parameters>
		<functionalities>
			<functionality>Install</functionality>
		</functionalities>
	</command>
	<command name="updateWindowsSync" synopsis="Windows Update" developer="liuj">
		<script>windows\updateWindowsSync1</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="ssName" helpmessage="Name of the snapshot which to restore before updating Windows" />
			<parameter mandatory="0" name="updateServer" helpmessage="Windows update server from which to download updates, default is 'internal'" type="option">
				<options>
					<option value="internal">internal (VMware)</option>
					<option value="external">external (Microsoft)</option>
				</options>
			</parameter>
			<parameter mandatory="0" name="severity" helpmessage="Severity of the update to install, default is 'Critical'" type="option">
				<options>
					<option value="Critical">Critical</option>
					<option value="Important">Importanct (Critical + Important)</option>
					<option value="Moderate">Moderate (Critical + Important + Moderate)</option>
					<option value="Low">Low (Critical + Important + Moderate + Low)</option>
					<option value="All">All (Critical + Important + Moderate + Low + Not Defined)</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Install</functionality>
		</functionalities>
	</command>
	<command name="updateWindows" synopsis="Windows Update (asynchronous)" developer="liuj">
		<script>windows\updateWindows1</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="ssName" helpmessage="Name of the snapshot which to restore before updating Windows" />
			<parameter mandatory="0" name="updateServer" helpmessage="Windows update server from which to download updates, default is 'internal'" type="option">
				<options>
					<option value="internal">internal (VMware)</option>
					<option value="external">external (Microsoft)</option>
				</options>
			</parameter>
			<parameter mandatory="0" name="severity" helpmessage="Severity of the update to install, default is 'Critical'" type="option">
				<options>
					<option value="Critical">Critical</option>
					<option value="Important">Importanct (Critical + Important)</option>
					<option value="Moderate">Moderate (Critical + Important + Moderate)</option>
					<option value="Low">Low (Critical + Important + Moderate + Low)</option>
					<option value="All">All (Critical + Important + Moderate + Low + Not Defined)</option>
				</options>
			</parameter>
			<parameter mandatory="0" name="emailTo" helpmessage="Email address to which to send notification" />
			<parameter mandatory="0" name="uvsId" helpmessage="This parameter is used by UVS only. It's not editable to end user." type="uvsid" />
		</parameters>
		<functionalities>
			<functionality>Install</functionality>
		</functionalities>
	</command>
	<command name="vmSetViewLogLevel" synopsis="Set View log level" developer="liuj">
		<script>windows\vmware\setViewLogLevel</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="logLevel" helpmessage="Log levels, 1-3 for Broker, 4-8 for Agent and Client" type="option">
				<options>
					<option value="0">0 (Default)</option>
					<option value="1">1 (View Info)</option>
					<option value="2">2 (View Debug)</option>
					<option value="3">3 (View Full)</option>
					<option value="4">4 (PCoIP Info)</option>
					<option value="5">5 (PCoIP Debug)</option>
					<option value="6">6 (Virtual Channel Info)</option>
					<option value="7">7 (Virtual Channel Debug)</option>
					<option value="8">8 (Virtual Channel Trace)</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Log</functionality>
		</functionalities>
	</command>
	<command name="deployWindowsVmSync" synopsis="Deploy Windows VM" developer="liuj">
		<script>deploy\deployWindowsVmSync</script>
		<xi:include href="deployWinVm.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
		<functionalities>
			<functionality>MakeVM</functionality>
		</functionalities>
	</command>
	<!--command name="deployWindowsVm" synopsis="Deploy Windows VM (asynchronous)" developer="liuj">
		<script>deploy\deployWindowsVm</script>
		<xi:include href="deployWinVm.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
		<functionalities>
			<functionality>MakeVM</functionality>
		</functionalities>
	</command>
	<command name="deployWindowsVmNew" synopsis="Deploy Windows VM (new)" developer="liuj" hidden="1">
		<script>deploy\deployWindowsVmNew</script>
		<xi:include href="deployWinVmNew.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
		<functionalities>
			<functionality>MakeVM</functionality>
		</functionalities>
	</command-->
	<xi:include href="Deploy/deployWindowsVm.xml" xpointer="xpointer(//command)" parse="xml" />
	<command name="linkedClone" synopsis="Linked clone VM" developer="liuj">
		<script>deploy\linkedClone</script>
		<parameters>
			&commonVcParam;
			<parameter mandatory="1" name="parentVmName" helpmessage="Parent virtual machine name" />
			<parameter mandatory="1" name="parentSnapshotName" helpmessage="Parent snapshot name" />
			<parameter mandatory="1" name="datastoreName" helpmessage="Datastore name" />
			<parameter mandatory="1" name="vmHostName" helpmessage="VM host name" />
			<parameter mandatory="1" name="namePrefix" helpmessage="Prefix of the VM name" />
			<parameter mandatory="0" name="number" helpmessage="Number of VM to clone, default is 1" />
			<parameter mandatory="0" name="startNumber" helpmessage="Start number, default is 1" />
		</parameters>
		<functionalities>
			<functionality>MakeVM</functionality>
		</functionalities>
	</command>
	<command name="deployWindowsVm2" synopsis="Post deployment action" developer="liuj" hidden="1">
		<script>deploy\deployWindowsVm2</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="emailTo" helpmessage="Email address to which to send notification" />
		</parameters>
		<functionalities>
			<functionality>MakeVM</functionality>
		</functionalities>
	</command>
	<command name="deployOva" synopsis="Deploy to ESX" developer="liuj">
		<script>ova\deployOva</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="ovaUrl" helpmessage="URL of the OVA" type="textarea" />
			<parameter mandatory="1" name="vmName" helpmessage="Name of the target VM to be deployed from OVA" />
			<parameter mandatory="1" name="datastore" helpmessage="Name of the datastore where the target VM is located" type="selectText">
				<options />
			</parameter>
			<parameter mandatory="0" name="storageFormat" helpmessage="Storage format of the disks of the virtual machine" type="option">
				<options>
					<option value="Thin">Thin</option>
					<option value="Thick">Thick</option>
					<option value="EagerZeroedThick">EagarZeroedThick</option>
				</options>
			</parameter>
			<parameter mandatory="1" name="portGroup" helpmessage="Name of the virtual port group where the target VM is located" type="selectText">
				<options />
			</parameter>
			<parameter mandatory="0" name="advancedProperty" helpmessage="Advanced properties, such --prop:vami.hostname=myvmname" type="textarea" />
		</parameters>
		<functionalities>
			<functionality>OVA</functionality>
		</functionalities>
	</command>
	<command name="deployOvaToVc" synopsis="Deploy to VC" developer="liuj">
		<script>ova\deployOvaToVc</script>
		<parameters>
			&commonVcParam;
			<parameter mandatory="1" name="ovaUrl" helpmessage="URL of the OVA" type="textarea" />
			<parameter mandatory="1" name="vmName" helpmessage="Name of the target VM to be deployed from OVA" />
			<parameter mandatory="1" name="datacenter" helpmessage="Name of datacenter" />
			<parameter mandatory="0" name="cluster" helpmessage="Name of cluster" />
			<parameter mandatory="1" name="esxHost" helpmessage="Name of ESX host" />
			<parameter mandatory="1" name="datastore" helpmessage="Name of the datastore where the target VM is located" type="selectText">
				<options />
			</parameter>
			<parameter mandatory="0" name="storageFormat" helpmessage="Storage format of the disks of the virtual machine" type="option">
				<options>
					<option value="Thin">Thin</option>
					<option value="Thick">Thick</option>
					<option value="EagerZeroedThick">EagarZeroedThick</option>
				</options>
			</parameter>
			<parameter mandatory="1" name="portGroup" helpmessage="Name of the virtual port group where the target VM is located" type="selectText">
				<options />
			</parameter>
			<parameter mandatory="0" name="advancedProperty" helpmessage="Advanced properties, such --prop:vami.hostname=myvmname" type="textarea" />
		</parameters>
		<functionalities>
			<functionality>OVA</functionality>
		</functionalities>
	</command>
	<command name="vmRemoteCosole" synopsis="Access VM remotely" developer="liuj">
		<script>vm\vmRemoteConsole</script>
		<parameters>
			&commonViServerParam;
		</parameters>
		<functionalities>
			<functionality>Remote_Console</functionality>
		</functionalities>
	</command>
	<command name="sshRunScript" synopsis="Run user defined script via SSH" developer="liuj">
		<script>ssh\sshRunScript</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="script" helpmessage="Script to run in VM" type="textarea" />
		</parameters>
		<functionalities>
			<functionality>SSH</functionality>
		</functionalities>
	</command>
	<command name="vmSqlDbAction" synopsis="Create/drop database" developer="liuj">
		<script>windows\sqlDbAction</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="dbServerName" helpmessage="SQL server name, such as 'MICROSO-N9U1D7A\SQLEXPRESS'" />
			<parameter mandatory="1" name="dbName" helpmessage="Database name" />
			<parameter mandatory="1" name="action" helpmessage="Action on database, create | drop" type="option">
				<options>
					<option value="create">create</option>
					<option value="drop">drop</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>SQL_Server</functionality>
		</functionalities>
	</command>
	<command name="vmSetupStaf" synopsis="Setup Staf" developer="liuj">
		<script>windows\vmware\setupStaf</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="start" helpmessage="How should Staf start, when user logon or as a service" type="option">
				<options>
					<option value="userLogon">userLogon</option>
					<option value="asService">asService</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Staf</functionality>
		</functionalities>
	</command>
	<command name="viewApiOperator_addRdsAppPool" synopsis="Add application pool" developer="liuj">
		<script>brokerrds\viewapi\viewApiOperator_addRdsAppPool</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="farmName" helpmessage="Specifies farm name" />
			<parameter mandatory="1" name="rdsServerDnsName" helpmessage="Specifies RDS server DNS name" />
			<parameter mandatory="1" name="appExecPath" helpmessage="Specifies application executable path" />
			<parameter mandatory="1" name="appName" helpmessage="Specifies application name" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
			<functionality>View_API</functionality>
		</functionalities>
	</command>
	<command name="vmCopyViewLogToUnc" synopsis="Copy View log to a network share folder" developer="liuj">
		<script>windows\vmware\copyViewLogToUnc</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="unc" helpmessage="Network share, such as \\bugs.eng.vmware.com\bugs" />
			<parameter mandatory="0" name="uncUser" helpmessage="Network share user, default is 'administrator'" />
			<parameter mandatory="0" name="uncPassword" helpmessage="Network share password, default is VMware standard" type="password" />
			<parameter mandatory="0" name="folder" helpmessage="Folder on the network share, such as '\files\0\1\2\3\4\5\6\7\update0', default is '\'" />
		</parameters>
		<functionalities>
			<functionality>Log</functionality>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="vmEnableRdp" synopsis="Enable RDP" developer="liuj">
		<script>windows\enableRDP</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
		</parameters>
		<functionalities>
			<functionality>Remote_Console</functionality>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="viewApiOperator_getAppExecPathOnRds" synopsis="Get application path on RDS server" developer="liuj">
		<script>brokerrds\viewapi\viewApiOperator_getAppExecPathOnRds</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="farmName" helpmessage="Specifies farm name" />
			<parameter mandatory="1" name="rdsServerDnsName" helpmessage="Specifies RDS server DNS name" />
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
			<functionality>View_API</functionality>
		</functionalities>
	</command>
	<command name="viewApiOperator_getRdsSessionCount" synopsis="Get RDS session count" developer="liuj">
		<script>brokerrds\viewapi\viewApiOperator_getRdsSessionCount</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			&rdsSessionCounter;
		</parameters>
		<functionalities>
			<functionality>Broker_RDS</functionality>
			<functionality>View_API</functionality>
		</functionalities>
	</command>
	<command name="vmxGet" synopsis="Get VMX file" developer="liuj">
		<script>vm\vmxGet</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="vmName" helpmessage="Name of the target VM" />
		</parameters>
		<functionalities>
			<functionality>VMX</functionality>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="vmInstallPowershell" synopsis="Install Powershell" developer="liuj">
		<script>vm\vmInstallPowershell</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
		</parameters>
		<functionalities>
			<functionality>Powershell</functionality>
			<functionality>Install</functionality>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="installPowershell4" synopsis="Powershell 4.0" developer="liuj">
		<script>install\installPowershell4</script>
		<description>
			<p>
				<b>Supported Operating System</b>
			</p>
			<p>Windows 7, Windows Embedded Standard 7, Windows Server 2008 R2, Windows Server 2012</p>
			<p>Windows Management Framework 4.0 requires Microsoft .NET Framework 4.5. </p>
		</description>
		<parameters>
			&commonViServerParam;
			&vmParam;
		</parameters>
		<functionalities>
			<functionality>Powershell</functionality>
			<functionality>Install</functionality>
		</functionalities>
	</command>
	<command name="vmRunScript" synopsis="Run user defined script" developer="liuj">
		<script>windows\runScript</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="script" helpmessage="Script to run in VM" type="textarea" />
			<parameter mandatory="0" name="type" helpmessage="Type of the script to run" type="option">
				<options>
					<option value="Bat">Bat (aynchronous, service returns immediately after triggering the batch script)</option>
					<option value="Powershell">Powershell (synchronous, service returns when Powershell script completes)</option>
					<option value="Interactive">Interactive (synchronous, the user must already log in the VM)</option>
					<option value="InteractivePS1">InteractivePS1 (synchronous, the user must already log in the VM)</option>
					<option value="Bash">Bash (synchronous)</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Script</functionality>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="vmRunScript3" synopsis="Run user defined script v3" developer="liuj" hidden="1">
		<script>windows\runScript3</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="script" helpmessage="Script to run in VM" type="textarea" />
			<parameter mandatory="0" name="type" helpmessage="Type of the script to run" type="option">
				<options>
					<option value="Bat">Bat (asynchronous, service returns immediately after triggering the batch script)</option>
					<option value="Powershell">Powershell (asynchronous)</option>
					<option value="Bash">Bash (asynchronous)</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Script</functionality>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="vmxSet" synopsis="Set VMX file" developer="liuj">
		<script>vm\vmxSet</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="vmName" helpmessage="Name of the target VM" />
			<parameter mandatory="1" name="vmxFile" helpmessage="VMX file" type="file" />
		</parameters>
		<functionalities>
			<functionality>VMX</functionality>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="snapshotAction" synopsis="Take / Restore / Remove" developer="liuj">
		<script>vm\snapshotAction</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="vmName" helpmessage="Name of the target VM" />
			<parameter mandatory="1" name="ssName" helpmessage="Name of the snapshot" />
			<parameter mandatory="0" name="ssDescription" helpmessage="Description of the snapshot" />
			<parameter mandatory="1" name="action" helpmessage="Action against the snapshot" type="option">
				<options>
					<option value="take">take</option>
					<option value="restore">restore</option>
					<option value="remove">remove</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Snapshot</functionality>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="uninstallApp" synopsis="Windows application" developer="liuj">
		<script>install\uninstallApp</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="appName" helpmessage="Name of the application to uninstall (could be found at Control Panel &gt; Programs &gt; Programs and Features)" type="selectText">
				<options>
					<option value="View Client">View Client</option>
					<option value="View Agent">View Agent</option>
					<option value="View Connection Server">View Connection Server</option>
					<option value="VMwareVDMDS">VMwareVDMDS</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Uninstall</functionality>
		</functionalities>
	</command>
	<command name="configureViewPlanner" synopsis="Configure View Planner" developer="liuj">
		<script>configureViewPlanner</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="vmName" helpmessage="Name of the VP VM" />
			<parameter mandatory="0" name="staticIp" helpmessage="Static IP address of the VP VM" />
		</parameters>
		<functionalities>
			<functionality>View_Planner</functionality>
		</functionalities>
	</command>
	<command name="deployViewPlanner" synopsis="Deploy and configure View Planner" developer="liuj" hidden="1">
		<script>deployViewPlanner</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="0" name="datastore" helpmessage="Name of the datastore where VP VM is located" type="selectText">
				<options />
			</parameter>
			<parameter mandatory="0" name="vpName" helpmessage="Name of the VP VM (default is 'ViewPlanner')" />
			<parameter mandatory="1" name="vpBuild" helpmessage="Build of VP" type="option">
				<options>
					<option value="1321259">1321259</option>
				</options>
			</parameter>
			<parameter mandatory="0" name="portGroup" helpmessage="Name of the virtual port group where VP VM is located" type="selectText">
				<options />
			</parameter>
			<parameter mandatory="0" name="staticIp" helpmessage="Static IP address of the VP VM" />
		</parameters>
		<functionalities>
			<functionality>View_Planner</functionality>
		</functionalities>
	</command>
	<command name="answerVmQuestion" synopsis="Answer VM question" developer="liuj">
		<script>vm\answerVmQuestion</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="vmName" helpmessage="Name of the target VM" />
			<parameter mandatory="0" name="answer" helpmessage="Answer to the question, default is 'Cancel'" />
		</parameters>
		<functionalities>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="deleteVm" synopsis="Delete VM" developer="liuj">
		<script>vm\deleteVm</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="vmName" helpmessage="Name of the target VM" />
		</parameters>
		<functionalities>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="listVmAndSnapshot" synopsis="List VMs and snapshots" developer="liuj">
		<script>vm\listVmAndSnapshot</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="0" name="vmName" helpmessage="Name of the target VM. Default is '*' to list all VMs" />
		</parameters>
		<functionalities>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="vmPowerOn" synopsis="Power on" developer="liuj">
		<script>vm\vmPowerOn</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
		</parameters>
		<functionalities>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="vmRunScript2" synopsis="Run user defined script v2" developer="liuj" hidden="1">
		<script>windows\runScript2</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="script" helpmessage="Script to run in VM" type="textarea" />
			<parameter mandatory="0" name="type" helpmessage="Type of the script to run" type="option">
				<options>
					<option value="Bat">Bat (aynchronous, service returns immediately after triggering the batch script)</option>
					<option value="Powershell">Powershell (synchronous, service returns when Powershell script completes)</option>
					<option value="Interactive">Interactive (asynchronous, the user must already log in the VM)</option>
					<option value="Bash">Bash (synchronous)</option>
				</options>
			</parameter>
			<parameter mandatory="0" name="method" helpmessage="How to trigger scripts in VM" type="option">
				<options>
					<option value="PSSession">PSSession (Powershell remote session)</option>
					<option value="VMwareTools">VMwareTools (Invoke-VMScript through VMware Tools)</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="vmSetMemory" synopsis="Set memory size" developer="liuj">
		<script>vm\vmSetMemory</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="vmName" helpmessage="Name of the target VM" />
			<parameter mandatory="1" name="memoryGb" helpmessage="Specifies the memory size in gigabytes (GB)." />
		</parameters>
		<functionalities>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="vmAddDisk" synopsis="Add hard disks" developer="liuj">
		<script>vm\vmAddDisk</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="vmName" helpmessage="Name of the target VM" />
			<parameter mandatory="1" name="capacityGb" helpmessage="Specifies the disk size in gigabytes (GB)." />
			<parameter mandatory="0" name="diskNumber" helpmessage="Specifies number of disks to add, default is 1." />
			<parameter mandatory="0" name="storageFormat" helpmessage="Storage format of the disks" type="option">
				<options>
					<option value="Thin">Thin</option>
					<option value="Thick">Thick</option>
					<option value="EagerZeroedThick">EagarZeroedThick</option>
				</options>
			</parameter>
			<parameter mandatory="0" name="Persistence" helpmessage="Persistence mode, default is IndependentPersistent" type="option">
				<options>
					<option value="IndependentPersistent">IndependentPersistent</option>
					<option value="IndependentNonPersistent">IndependentNonPersistent</option>
					<option value="Persistent">Persistent</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="vmSetPortGroup" synopsis="Set network port group" developer="liuj">
		<script>vm\vmSetPortGroup</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="vmName" helpmessage="Name of the target VM" />
			<parameter mandatory="1" name="portGroup" helpmessage="Name of the port group" type="selectText">
				<options />
			</parameter>
		</parameters>
		<functionalities>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="vmSuspend" synopsis="Suspend" developer="liuj">
		<script>vm\vmSuspend</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
		</parameters>
		<functionalities>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="vmUpdateTools" synopsis="Update VMware Tools" developer="liuj">
		<script>vm\vmUpdateTools</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
		</parameters>
		<functionalities>
			<functionality>VM</functionality>
		</functionalities>
	</command>
	<command name="addDsNic" synopsis="Add DS NIC" developer="liuj">
		<script>vsphere\addDsNic</script>
		<parameters>
			&commonVcParam;
			<parameter mandatory="0" name="esxAddress" helpmessage="FQDN or IP of ESX, default is '*'" />
			<parameter mandatory="1" name="dsName" helpmessage="Name of distributed switch" />
			<parameter mandatory="1" name="nicName" helpmessage="Name of network adapter" />
		</parameters>
		<functionalities>
			<functionality>vSphere</functionality>
		</functionalities>
	</command>
	<command name="addVsanAdapter" synopsis="Add VSAN network adapter" developer="liuj">
		<script>vsphere\addVsanAdapter</script>
		<parameters>
			&commonVcParam;
			<parameter mandatory="0" name="esxAddress" helpmessage="FQDN or IP of ESX, default is '*'" />
			<parameter mandatory="1" name="portGroup" helpmessage="Name of virtual port group" type="selectText">
				<options />
			</parameter>
		</parameters>
		<functionalities>
			<functionality>vSphere</functionality>
		</functionalities>
	</command>
	<command name="setPageSharing" synopsis="Set inter-VM transparent page sharing" developer="liuj">
		<script>vsphere\setPageSharing</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="switch" helpmessage="Switch, true or false" type="option">
				&falseOrTrue;
			</parameter>
		</parameters>
		<functionalities>
			<functionality>vSphere</functionality>
		</functionalities>
	</command>
	<command name="listDatastore" synopsis="List datastores" developer="liuj">
		<script>vsphere\listDatastore</script>
		<parameters>
			&commonViServerParam;
		</parameters>
		<functionalities>
			<functionality>vSphere</functionality>
		</functionalities>
	</command>
	<command name="listPortGroup" synopsis="List port groups" developer="liuj">
		<script>vsphere\listPortGroup</script>
		<parameters>
			&commonViServerParam;
			<parameter option="1" name="format" helpmessage="Output format, JSON | XML (default)" type="option">
				<options>
					<option value="XML">XML</option>
					<option value="JSON">JSON</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>vSphere</functionality>
		</functionalities>
	</command>
	<command name="listResourcePool" synopsis="List resource pools" developer="liuj">
		<script>vsphere\listResourcePool</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="0" name="resourcePoolName" helpmessage="Name of the target resource pool. Default is '*' to list all resource pools" />
		</parameters>
		<functionalities>
			<functionality>vSphere</functionality>
		</functionalities>
	</command>
	<command name="listVmHost" synopsis="List VM hosts" developer="liuj">
		<script>vsphere\listVmHost</script>
		<parameters>
			&commonViServerParam;
			<parameter option="1" name="format" helpmessage="Output format, JSON | XML (default)" type="option">
				<options>
					<option value="XML">XML</option>
					<option value="JSON">JSON</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>vSphere</functionality>
		</functionalities>
	</command>
	<command name="vSphereSyncTime" synopsis="Sync time for ESX and VM" developer="liuj">
		<script>vsphere\vSphereSyncTime</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="0" name="ntpServerAddress" helpmessage="NTP server address. Default is '10.132.71.1'" />
		</parameters>
		<functionalities>
			<functionality>vSphere</functionality>
		</functionalities>
	</command>
	<command name="updateFirmware" synopsis="Update DRAC firmware" developer="liuj">
		<script>vsphere\updateFirmware</script>
		<parameters>
			<parameter mandatory="1" name="address" helpmessage="IP address of the iDRAC card" />
			<parameter mandatory="0" name="user" helpmessage="User name (default is 'root')" />
			<parameter mandatory="0" name="password" helpmessage="Password (default is VMware standard)" type="password" />
			<parameter mandatory="0" name="type" helpmessage="Card type (default is 'iDrac')" type="option">
				<options>
					<option value="idrac">iDRAC</option>
				</options>
			</parameter>
		</parameters>
		<functionalities>
			<functionality>vSphere</functionality>
		</functionalities>
	</command>
	<command name="upgradeEsx" synopsis="Upgrade ESX server" developer="liuj">
		<script>vsphere\upgradeEsx</script>
		<parameters>
			&commonViServerParam;
			&commonBuildParam;
		</parameters>
		<functionalities>
			<functionality>vSphere</functionality>
		</functionalities>
	</command>
	<command name="vmChangeName" synopsis="Change hostname" developer="liuj">
		<script>windows\changeName</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="0" name="newGuestName" helpmessage="New name of the guest OS" />
		</parameters>
		<functionalities>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="vmGetInstalledApp" synopsis="Get all installed applications" developer="liuj">
		<script>windows\getInstalledApp</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
		</parameters>
		<functionalities>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="vmReadFile" synopsis="Read file in Windows" developer="liuj">
		<script>windows\readFile</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="filePath" helpmessage="File path in VM" />
			<parameter mandatory="0" name="numberOfLine" helpmessage="Number of lines to read. Count from top if positive; Count from bottom if negative. Read all if not defined." />
		</parameters>
		<functionalities>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="vmRestart" synopsis="Restart" developer="liuj">
		<script>windows\restart</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
		</parameters>
		<functionalities>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="vmSetAutoAdminLogon" synopsis="Set auto logon" developer="liuj">
		<script>windows\setAutoAdminLogon</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="switch" helpmessage="Auto logon switch, true | false." type="option">
				&falseOrTrue;
			</parameter>
		</parameters>
		<functionalities>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="vmShutdown" synopsis="Shutdown" developer="liuj">
		<script>windows\shutDown</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
		</parameters>
		<functionalities>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="vmTrustVMwareSignature" synopsis="Trust VMware Signed Drivers" developer="liuj">
		<script>windows\vmware\trustVMwareSignature</script>
		<description>
			<p>This command is to add VMware certificates (vmware_2013.cer and vmware_2016.cer) into Windows enterprise certificate store, so that VMware is considered a trusted publisher'.</p>
			<p>When the target machine is Windows XP, it simply sets the value of "HKLM:\SOFTWARE\Microsoft\Driver Signing\Policy" to 0.</p>
		</description>
		<parameters>
			&commonViServerParam;
			&vmParam;
		</parameters>
		<functionalities>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="vmUploadFileToRacetrack" synopsis="Upload a file to Racetrack" developer="liuj">
		<script>windows\vmware\uploadFileToRacetrack</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="resultId" helpmessage="Result ID on Racetrack" />
			<parameter mandatory="1" name="description" helpmessage="Description of the file to upload" />
			<parameter mandatory="0" name="filePath" helpmessage="File path, default is vmmsi log in the temp folder of the user" />
		</parameters>
		<functionalities>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="vmFileUpload" synopsis="Upload a file to Windows machine" developer="liuj">
		<script>windows\fileUpload</script>
		<parameters>
			&commonViServerParam;
			&vmParam;
			<parameter mandatory="1" name="file" helpmessage="File to upload to VM" type="file" />
			<parameter mandatory="1" name="destination" helpmessage="Destination path, such as c:\temp\ or /home/temp/" />
		</parameters>
		<functionalities>
			<functionality>Windows</functionality>
		</functionalities>
	</command>
	<command name="sftpCopyFile" synopsis="Copy a file to SFTP server" developer="liuj">
		<script>ssh\sftpCopyFile</script>
		<parameters>
			&commonViServerParam;
			<parameter mandatory="1" name="file" helpmessage="File to copy" type="file" />
			<parameter mandatory="1" name="destination" helpmessage="Destination path, such as /home/temp/" />
		</parameters>
		<functionalities>
			<functionality>SSH</functionality>
		</functionalities>
	</command>
	<command name="runWorkflow" synopsis="Run as a command" developer="liuj">
		<script>runWorkflow</script>
		<parameters>
			<parameter mandatory="1" name="name" helpmessage="Name of the workflow" />
			<parameter mandatory="0" name="emailTo" helpmessage="Email address to send notification" />
			<parameter mandatory="0" name="type" helpmessage="Run type, serial | parallel, default is serial" type="option">
				<options>
					<option value="serial">serial</option>
					<option value="parallel">parallel</option>
				</options>
			</parameter>
			<parameter mandatory="1" name="errorAction" helpmessage="Action on error, stop | continue, only meaningful for serial run" type="option">
				<options>
					<option value="stop">stop</option>
					<option value="continue">continue</option>
				</options>
			</parameter>
			<parameter mandatory="1" name="workflow" helpmessage="Workflow to run, in format of JSON" type="textarea" />
		</parameters>
		<functionalities>
			<functionality>Workflow</functionality>
		</functionalities>
	</command>
	<command name="checkAvamarInstall" synopsis="Check Avamar installation status" developer="liuj" hidden="1">
		<script>dps\check</script>
		<parameters>
			<parameter mandatory="1" name="serverAddress" helpmessage="Avamar Server IP" />
			<parameter mandatory="1" name="avamarRootPassword" helpmessage="Avamar Root user password" />
		</parameters>
	</command>
</webcommander>